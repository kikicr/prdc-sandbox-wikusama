<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-lazy-init="true">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- Hibernate SessionFactory -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="entityManagerFactory"	class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitManager" ref="persistenceUnitManager" />
		<property name="jpaProperties">
			<value>
				hibernate.dialect=${hibernate.dialect}
				hibernate.query.substitutions=true 'Y', false 'N'
				hibernate.cache.use_second_level_cache=false
				hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
				hibernate.jdbc.batch_size=100
				<!-- hibernate.show_sql=true -->
			</value>
		</property>
	</bean>

	<bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath:META-INF/persistence.xml</value>
			</list>
		</property>
		<property name="defaultDataSource" ref="dataSource" />
	</bean>

	<!-- Needed so the @PersistenceUnit annotation is recognized -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- Transaction manager for a single EntityManagerFactory (alternative to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
		<property name="jpaDialect" ref="jpaDialect" />
	</bean>

	<!-- Activates scanning of @Autowired -->
	<context:annotation-config />
	
	<context:component-scan base-package="com.anabatic.sandbox.dao.hibernate" />
	<context:component-scan base-package="com.anabatic.sandbox.service.impl" />
	
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="ApplicationResources" />
		<property name="useCodeAsDefaultMessage" value="true" />
	</bean>

	<!-- Validator -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<property name="validationMessageSource" ref="messageSource" />
	</bean>

	<bean id="jpaDialect" class="com.anabatic.sandbox.persistance.util.IsolationSupportHibernateJpaDialect" />
	<!-- Spring security -->
	<bean id="springSecurityService" class="com.anabatic.sandbox.service.impl.SpringSecurityImp"></bean>
	<bean id="successLoginHandler" class="com.anabatic.sandbox.handler.SuccessLoginHandler"></bean>
</beans>
